CREATE TABLE FoodInfo_AddLog (
id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
userid VARCHAR2(512) NOT NULL,
logdate TIMESTAMP NOT NULL,
food_pk NUMBER NOT NULL); 

DESC foodinfo_addlog;
SELECT * FROM FOODINFO_ADDLOG;


CREATE OR REPLACE TRIGGER food_addtrig
    BEFORE
    INSERT ON food
    FOR EACH ROW
DECLARE
    metricgrams NUMBER(5);
    carb NUMBER(5,2);
    protein NUMBER(5,2);
    fat NUMBER(5,2);
BEGIN
    SELECT :new.food_carb INTO carb FROM DUAL;
    SELECT :new.food_protein INTO protein FROM DUAL;
    SELECT :new.food_fat INTO fat FROM DUAL;
    
    IF ((carb + protein + fat) > :new.food_metricgrams) THEN
        RAISE_APPLICATION_ERROR(-20000, '탄수화물, 단백질, 지방의 합이 그램수보다 높을 수는 없습니다.');
    END IF;
END;
/

DESC cal_user
select * from cal_user;
DESC food;

CREATE OR REPLACE PROCEDURE addfood
(cal_user_id IN VARCHAR2,
v_food_name IN VARCHAR2,
v_food_category IN VARCHAR2,
v_food_metricname IN VARCHAR2,
v_food_metricgrams IN NUMBER,
v_food_calorie IN NUMBER,
v_food_carb IN NUMBER,
v_food_protein IN NUMBER,
v_food_fat IN NUMBER,
v_food_sodium IN NUMBER,
v_food_sugar IN NUMBER
)
AS
    v_food_pk NUMBER;
BEGIN
    INSERT INTO food (food_name, food_category, food_metricname, food_metricgrams,
    food_calorie, food_carb, food_protein, food_fat, food_sodium, food_sugar)
    VALUES (v_food_name, v_food_category, v_food_metricname, v_food_metricgrams,
    v_food_calorie, v_food_carb, v_food_protein, v_food_fat, v_food_sodium, v_food_sugar);
    
    SELECT food_pk INTO v_food_pk FROM food WHERE food_name = v_food_name AND food_category = v_food_category AND food_calorie = v_food_calorie;
    
    INSERT INTO foodinfo_addlog (userid, logdate, food_pk) VALUES (cal_user_id, SYSTIMESTAMP, v_food_pk);
END;
/
